var I=Object.defineProperty;var $=(g,e,t)=>e in g?I(g,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):g[e]=t;var h=(g,e,t)=>$(g,typeof e!="symbol"?e+"":e,t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const n of s)if(n.type==="childList")for(const l of n.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&i(l)}).observe(document,{childList:!0,subtree:!0});function t(s){const n={};return s.integrity&&(n.integrity=s.integrity),s.referrerPolicy&&(n.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?n.credentials="include":s.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function i(s){if(s.ep)return;s.ep=!0;const n=t(s);fetch(s.href,n)}})();function R(g){return g&&g.__esModule&&Object.prototype.hasOwnProperty.call(g,"default")?g.default:g}var D={exports:{}};(function(g){var e=Object.prototype.hasOwnProperty,t="~";function i(){}Object.create&&(i.prototype=Object.create(null),new i().__proto__||(t=!1));function s(c,a,r){this.fn=c,this.context=a,this.once=r||!1}function n(c,a,r,d,f){if(typeof r!="function")throw new TypeError("The listener must be a function");var v=new s(r,d||c,f),p=t?t+a:a;return c._events[p]?c._events[p].fn?c._events[p]=[c._events[p],v]:c._events[p].push(v):(c._events[p]=v,c._eventsCount++),c}function l(c,a){--c._eventsCount===0?c._events=new i:delete c._events[a]}function u(){this._events=new i,this._eventsCount=0}u.prototype.eventNames=function(){var a=[],r,d;if(this._eventsCount===0)return a;for(d in r=this._events)e.call(r,d)&&a.push(t?d.slice(1):d);return Object.getOwnPropertySymbols?a.concat(Object.getOwnPropertySymbols(r)):a},u.prototype.listeners=function(a){var r=t?t+a:a,d=this._events[r];if(!d)return[];if(d.fn)return[d.fn];for(var f=0,v=d.length,p=new Array(v);f<v;f++)p[f]=d[f].fn;return p},u.prototype.listenerCount=function(a){var r=t?t+a:a,d=this._events[r];return d?d.fn?1:d.length:0},u.prototype.emit=function(a,r,d,f,v,p){var y=t?t+a:a;if(!this._events[y])return!1;var o=this._events[y],b=arguments.length,S,m;if(o.fn){switch(o.once&&this.removeListener(a,o.fn,void 0,!0),b){case 1:return o.fn.call(o.context),!0;case 2:return o.fn.call(o.context,r),!0;case 3:return o.fn.call(o.context,r,d),!0;case 4:return o.fn.call(o.context,r,d,f),!0;case 5:return o.fn.call(o.context,r,d,f,v),!0;case 6:return o.fn.call(o.context,r,d,f,v,p),!0}for(m=1,S=new Array(b-1);m<b;m++)S[m-1]=arguments[m];o.fn.apply(o.context,S)}else{var w=o.length,N;for(m=0;m<w;m++)switch(o[m].once&&this.removeListener(a,o[m].fn,void 0,!0),b){case 1:o[m].fn.call(o[m].context);break;case 2:o[m].fn.call(o[m].context,r);break;case 3:o[m].fn.call(o[m].context,r,d);break;case 4:o[m].fn.call(o[m].context,r,d,f);break;default:if(!S)for(N=1,S=new Array(b-1);N<b;N++)S[N-1]=arguments[N];o[m].fn.apply(o[m].context,S)}}return!0},u.prototype.on=function(a,r,d){return n(this,a,r,d,!1)},u.prototype.once=function(a,r,d){return n(this,a,r,d,!0)},u.prototype.removeListener=function(a,r,d,f){var v=t?t+a:a;if(!this._events[v])return this;if(!r)return l(this,v),this;var p=this._events[v];if(p.fn)p.fn===r&&(!f||p.once)&&(!d||p.context===d)&&l(this,v);else{for(var y=0,o=[],b=p.length;y<b;y++)(p[y].fn!==r||f&&!p[y].once||d&&p[y].context!==d)&&o.push(p[y]);o.length?this._events[v]=o.length===1?o[0]:o:l(this,v)}return this},u.prototype.removeAllListeners=function(a){var r;return a?(r=t?t+a:a,this._events[r]&&l(this,r)):(this._events=new i,this._eventsCount=0),this},u.prototype.off=u.prototype.removeListener,u.prototype.addListener=u.prototype.on,u.prefixed=t,u.EventEmitter=u,g.exports=u})(D);var C=D.exports;const M=R(C);class E{constructor(e,t){h(this,"seed");h(this,"phaseResetInterval");h(this,"cache");this.seed=e,this.phaseResetInterval=t,this.cache=new Map}computeValue(e){if(this.cache.has(e))return this.cache.get(e);if(e%this.phaseResetInterval===0){const n=this.seed;return this.cache.set(e,n),n}const t=e-1,i=this.computeValue(t),s=this.collapseDigits(i*this.seed);return this.cache.set(e,s),s}collapseDigits(e){const t=String(e).split("").reduce((i,s)=>i+parseInt(s),0);return t>9?this.collapseDigits(t):t}clearCache(){this.cache.clear()}}class L{constructor(e){h(this,"nodeId");h(this,"pattern");h(this,"eventEmitter");h(this,"globalStep");this.nodeId=e.nodeId,this.pattern=new E(e.seed,e.phaseResetInterval),this.eventEmitter=new M,this.globalStep=0}broadcast(e){const t={senderId:this.nodeId,globalStep:this.globalStep,patternValue:this.pattern.computeValue(this.globalStep),data:e};this.eventEmitter.emit("broadcast",t),this.incrementStep()}receive(e){const t=this.pattern.computeValue(e.globalStep);if(t!==e.patternValue){this.eventEmitter.emit("error",{type:"pattern-mismatch",message:e,expected:t});return}this.sync(e.globalStep),this.eventEmitter.emit("message",e)}sync(e){e>this.globalStep&&(this.globalStep=e,this.eventEmitter.emit("sync",this.globalStep))}incrementStep(){this.globalStep++}onBroadcast(e){this.eventEmitter.on("broadcast",e)}onMessage(e){this.eventEmitter.on("message",e)}onError(e){this.eventEmitter.on("error",e)}onSync(e){this.eventEmitter.on("sync",e)}}class O{constructor(){h(this,"nodes");this.nodes=new Map}createNode(e){const t=new L(e);return t.onBroadcast(i=>{this.broadcast(i,t)}),this.nodes.set(e.nodeId,t),t}broadcast(e,t){this.nodes.forEach((i,s)=>{s!==e.senderId&&i.receive(e)})}getNode(e){return this.nodes.get(e)}removeNode(e){this.nodes.delete(e)}}class x{constructor(e){h(this,"pattern");h(this,"eventEmitter");h(this,"observedMessages",[]);h(this,"anomalies",[]);this.pattern=new E(e.seed,e.phaseResetInterval),this.eventEmitter=new M}observe(e){const t=this.pattern.computeValue(e.globalStep);if(t!==e.patternValue){const i={type:"pattern-mismatch",message:e,expected:t,received:e.patternValue,timestamp:Date.now()};this.anomalies.push(i),this.eventEmitter.emit("anomaly",i)}else this.observedMessages.push(e),this.eventEmitter.emit("valid-message",e)}getStatistics(){const e=this.observedMessages.length+this.anomalies.length,t=this.observedMessages.length,i=this.anomalies.length,s=e>0?t/e*100:0;return{totalObserved:e,validMessages:t,anomalies:i,successRate:s}}onAnomaly(e){this.eventEmitter.on("anomaly",e)}onValidMessage(e){this.eventEmitter.on("valid-message",e)}clearHistory(){this.observedMessages=[],this.anomalies=[]}}class V{constructor(){h(this,"network");h(this,"observer");h(this,"pattern");h(this,"logContainer");h(this,"nodeGrid");h(this,"patternViz");h(this,"messageCount",0);h(this,"currentStep",0);h(this,"activeNodes",new Set);h(this,"isRunning",!1);this.network=new O,this.observer=new x({seed:7,phaseResetInterval:100}),this.pattern=new E(7,100),this.logContainer=document.getElementById("logContainer"),this.nodeGrid=document.getElementById("nodeGrid"),this.patternViz=document.getElementById("patternViz"),this.initializeEventListeners(),this.updatePatternVisualization()}initializeEventListeners(){document.getElementById("startMeshDemo").addEventListener("click",()=>this.runMeshDemo()),document.getElementById("startSyncDemo").addEventListener("click",()=>this.runSyncDemo()),document.getElementById("startObserverDemo").addEventListener("click",()=>this.runObserverDemo()),document.getElementById("startWebDemo").addEventListener("click",()=>this.runWebApplicationDemo()),document.getElementById("startMonitoringDemo").addEventListener("click",()=>this.runMonitoringDemo()),document.getElementById("startRandomDemo").addEventListener("click",()=>this.runRandomizedDemo()),document.getElementById("clearLogs").addEventListener("click",()=>this.clearLogs())}log(e,t="info"){const i=document.createElement("div");i.className=`log-entry ${t}`,i.textContent=`[${new Date().toLocaleTimeString()}] ${e}`,this.logContainer.appendChild(i),this.logContainer.scrollTop=this.logContainer.scrollHeight}updateStats(){document.getElementById("totalMessages").textContent=this.messageCount.toString(),document.getElementById("activeNodes").textContent=this.activeNodes.size.toString(),document.getElementById("currentStep").textContent=this.currentStep.toString();const e=this.observer.getStatistics(),t=e.totalObserved>0?e.successRate.toFixed(1):"100.0";document.getElementById("successRate").textContent=`${t}%`}updateNodeDisplay(e,t,i=!1,s=!1){let n=document.getElementById(`node-${e}`);n||(n=document.createElement("div"),n.id=`node-${e}`,n.className="node",n.innerHTML=`
        <div class="node-id">${e}</div>
        <div class="node-status"></div>
      `,this.nodeGrid.appendChild(n),this.activeNodes.add(e)),n.className=`node ${i?"active":""} ${s?"error":""}`,n.querySelector(".node-status").textContent=t}updatePatternVisualization(){this.patternViz.innerHTML="";for(let e=Math.max(0,this.currentStep-2);e<=this.currentStep+2;e++){const t=document.createElement("div");t.className=`pattern-step ${e===this.currentStep?"current":""}`,t.textContent=this.pattern.computeValue(e).toString(),this.patternViz.appendChild(t)}}async delay(e){return new Promise(t=>setTimeout(t,e))}async runMeshDemo(){if(this.isRunning)return;this.isRunning=!0,this.log("üåê Starting Mesh Demo...","info"),this.clearNodes();const t=[{nodeId:"sensor-001",seed:7,phaseResetInterval:100},{nodeId:"sensor-002",seed:7,phaseResetInterval:100},{nodeId:"gateway-001",seed:7,phaseResetInterval:100},{nodeId:"observer-001",seed:7,phaseResetInterval:100}].map(s=>{const n=this.network.createNode(s);return this.updateNodeDisplay(s.nodeId,"Initializing..."),n.onMessage(l=>{this.messageCount++,this.currentStep=Math.max(this.currentStep,l.globalStep),this.updateNodeDisplay(s.nodeId,"Message received",!0),this.log(`üì® ${s.nodeId} received: ${JSON.stringify(l.data)}`,"success"),this.observer.observe(l),setTimeout(()=>{this.updateNodeDisplay(s.nodeId,"Idle")},1e3)}),n.onError(l=>{this.log(`‚ùå ${s.nodeId} error: ${l.type}`,"error"),this.updateNodeDisplay(s.nodeId,"Error",!1,!0)}),n});this.observer.onValidMessage(s=>{this.log(`‚úÖ Observer validated message from ${s.senderId}`,"success")}),this.observer.onAnomaly(s=>{this.log(`‚ö†Ô∏è Observer detected anomaly: ${s.type}`,"warning")}),this.log("üì° Starting sensor data broadcasts...","info");const i=[{node:t[0],data:{type:"temperature",value:23.5,unit:"celsius"}},{node:t[1],data:{type:"humidity",value:65,unit:"percent"}},{node:t[2],data:{type:"status",value:"online",uptime:3600}},{node:t[3],data:{type:"observation",value:"normal_operation",confidence:.95}}];for(const s of i)await this.delay(1500),this.updateNodeDisplay(s.node.nodeId,"Broadcasting...",!0),this.log(`üì° ${s.node.nodeId} broadcasting data...`,"info"),s.node.broadcast(s.data),this.updatePatternVisualization(),this.updateStats();this.log("‚úÖ Mesh demo completed successfully!","success"),this.isRunning=!1}async runSyncDemo(){if(this.isRunning)return;this.isRunning=!0,this.log("üîÑ Starting Synchronization Demo...","info"),this.clearNodes();const e=this.network.createNode({nodeId:"node-a",seed:7,phaseResetInterval:100}),t=this.network.createNode({nodeId:"node-b",seed:7,phaseResetInterval:100});this.updateNodeDisplay("node-a","Initializing..."),this.updateNodeDisplay("node-b","Initializing..."),e.onMessage(i=>{this.messageCount++,this.currentStep=Math.max(this.currentStep,i.globalStep),this.updateNodeDisplay("node-a","Message received",!0),this.log(`üîµ Node A received: ${JSON.stringify(i.data)} at step ${i.globalStep}`,"success"),this.observer.observe(i),setTimeout(()=>{this.updateNodeDisplay("node-a","Idle")},1e3)}),t.onMessage(i=>{this.messageCount++,this.currentStep=Math.max(this.currentStep,i.globalStep),this.updateNodeDisplay("node-b","Message received",!0),this.log(`üî¥ Node B received: ${JSON.stringify(i.data)} at step ${i.globalStep}`,"success"),this.observer.observe(i),setTimeout(()=>{this.updateNodeDisplay("node-b","Idle")},1e3)}),e.onSync(i=>{this.log(`üîÑ Node A synchronized to step ${i}`,"info")}),t.onSync(i=>{this.log(`üîÑ Node B synchronized to step ${i}`,"info")}),this.log("üì° Node A broadcasting at step 0...","info"),this.updateNodeDisplay("node-a","Broadcasting...",!0),e.broadcast({message:"Hello from A",timestamp:Date.now()}),this.updatePatternVisualization(),this.updateStats(),await this.delay(2e3),this.log("üì° Node B broadcasting at step 1...","info"),this.updateNodeDisplay("node-b","Broadcasting...",!0),t.broadcast({message:"Hello from B",timestamp:Date.now()}),this.updatePatternVisualization(),this.updateStats(),await this.delay(2e3),this.log("üì° Node A broadcasting again (should be at step 2)...","info"),this.updateNodeDisplay("node-a","Broadcasting...",!0),e.broadcast({message:"Second message from A",timestamp:Date.now()}),this.updatePatternVisualization(),this.updateStats(),this.log("‚úÖ Synchronization demo completed!","success"),this.isRunning=!1}async runObserverDemo(){if(this.isRunning)return;this.isRunning=!0,this.log("üîç Starting Observer Demo...","info"),this.clearNodes(),this.updateNodeDisplay("observer","Monitoring..."),this.log("üì® Simulating valid message...","info"),this.observer.observe({senderId:"test-node",globalStep:0,patternValue:7,data:{test:"valid"}}),await this.delay(1e3),this.log("üì® Simulating invalid message...","warning"),this.observer.observe({senderId:"malicious-node",globalStep:1,patternValue:9,data:{test:"invalid"}}),await this.delay(1e3);const e=this.observer.getStatistics();this.log("üìä Observer Statistics:","info"),this.log(`   Total observed: ${e.totalObserved}`,"info"),this.log(`   Valid messages: ${e.validMessages}`,"info"),this.log(`   Anomalies: ${e.anomalies}`,"info"),this.log(`   Success rate: ${e.successRate.toFixed(2)}%`,"info"),this.messageCount=e.totalObserved,this.updateStats(),this.log("‚úÖ Observer demo completed!","success"),this.isRunning=!1}async runWebApplicationDemo(){if(this.isRunning)return;this.isRunning=!0,this.log("üåê Starting Distributed Web Application Demo...","info"),this.clearNodes(),this.log("üìù Simulating collaborative document editing...","info"),this.updateNodeDisplay("editor-alice","Editing document...",!0),this.updateNodeDisplay("editor-bob","Editing document...",!0),this.updateNodeDisplay("editor-charlie","Editing document...",!0),await this.delay(2e3);const e=["editor-alice","editor-bob","editor-charlie"],t=["insert","delete","format","move"];for(let s=0;s<8;s++){const n=e[Math.floor(Math.random()*e.length)],l=t[Math.floor(Math.random()*t.length)];this.updateNodeDisplay(n,`${l} operation`,!0),this.log(`‚úèÔ∏è ${n} performed ${l} operation`,"success"),this.messageCount++,this.currentStep++,await this.delay(1e3),this.updateNodeDisplay(n,"Idle")}this.log("üéÆ Simulating distributed gaming...","info"),this.updateNodeDisplay("game-server-us","Processing actions...",!0),this.updateNodeDisplay("game-server-eu","Processing actions...",!0),this.updateNodeDisplay("game-server-asia","Processing actions...",!0);const i=["player-move","player-attack","item-pickup","spell-cast"];for(let s=0;s<6;s++){const n=["game-server-us","game-server-eu","game-server-asia"][Math.floor(Math.random()*3)],l=i[Math.floor(Math.random()*i.length)];this.updateNodeDisplay(n,`${l}`,!0),this.log(`üéÆ ${n} processed ${l}`,"success"),this.messageCount++,this.currentStep++,await this.delay(1200),this.updateNodeDisplay(n,"Online")}this.updatePatternVisualization(),this.updateStats(),this.log("‚úÖ Distributed web application demo completed!","success"),this.isRunning=!1}async runMonitoringDemo(){if(this.isRunning)return;this.isRunning=!0,this.log("üîç Starting Real-time Monitoring Demo...","info"),this.clearNodes(),this.log("üîê Initializing security monitoring...","info");const e=["firewall-001","ids-002","auth-server-003"];e.forEach(n=>{this.updateNodeDisplay(n,"Monitoring...",!1)}),await this.delay(1e3);const t=["port-scan","failed-login","privilege-escalation","malware-detected"];for(let n=0;n<5;n++){const l=e[Math.floor(Math.random()*e.length)],u=t[Math.floor(Math.random()*t.length)],c=Math.random()>.7;this.updateNodeDisplay(l,`${u} detected`,!0,c),this.log(`${c?"üö®":"üîç"} ${l} detected: ${u}`,c?"error":"warning"),this.messageCount++,this.currentStep++,await this.delay(1500),this.updateNodeDisplay(l,"Monitoring...")}this.log("üí∞ Starting financial monitoring...","info");const i=["trading-engine","fraud-detector","risk-analyzer"];i.forEach(n=>{this.updateNodeDisplay(n,"Processing...",!1)});const s=["stock-trade","fraud-check","risk-assessment","compliance-check"];for(let n=0;n<4;n++){const l=i[Math.floor(Math.random()*i.length)],u=s[Math.floor(Math.random()*s.length)];this.updateNodeDisplay(l,`${u}`,!0),this.log(`üí∞ ${l} processed: ${u}`,"success"),this.messageCount++,this.currentStep++,await this.delay(1800),this.updateNodeDisplay(l,"Processing...")}this.updatePatternVisualization(),this.updateStats(),this.log("‚úÖ Real-time monitoring demo completed!","success"),this.isRunning=!1}async runRandomizedDemo(){if(this.isRunning)return;this.isRunning=!0,this.log("üé≤ Starting Randomized Multi-Domain Demo...","info"),this.clearNodes();const e=[{id:"iot-sensor",name:"IoT Sensor",activities:["temperature","humidity","motion","light"]},{id:"web-server",name:"Web Server",activities:["request","response","cache-hit","error"]},{id:"database",name:"Database",activities:["query","insert","update","backup"]},{id:"api-gateway",name:"API Gateway",activities:["route","authenticate","rate-limit","proxy"]},{id:"ml-processor",name:"ML Processor",activities:["train","predict","validate","deploy"]},{id:"blockchain-node",name:"Blockchain Node",activities:["mine","validate","broadcast","sync"]}];e.forEach(t=>{this.updateNodeDisplay(t.id,"Initializing...",!1)}),await this.delay(1e3);for(let t=0;t<15;t++){const i=e[Math.floor(Math.random()*e.length)],s=i.activities[Math.floor(Math.random()*i.activities.length)],n=Math.random()>.9,l=Math.random()>.3;this.updateNodeDisplay(i.id,`${s}`,l,n),n?(this.log(`‚ùå ${i.name} error during ${s}`,"error"),this.observer.observe({senderId:i.id,globalStep:this.currentStep,patternValue:Math.floor(Math.random()*9)+1,data:{activity:s,error:!0}})):(this.log(`‚úÖ ${i.name} completed ${s}`,"success"),this.observer.observe({senderId:i.id,globalStep:this.currentStep,patternValue:this.pattern.computeValue(this.currentStep),data:{activity:s,success:!0}})),this.messageCount++,this.currentStep++,this.updatePatternVisualization(),this.updateStats(),await this.delay(Math.random()*2e3+500),n||this.updateNodeDisplay(i.id,"Idle")}this.log("üéâ Randomized multi-domain demo completed!","success"),this.log(`üìä Final stats: ${this.messageCount} messages, ${this.observer.getStatistics().anomalies} anomalies`,"info"),this.isRunning=!1}clearLogs(){this.logContainer.innerHTML="",this.log("üöÄ Data Mesh System initialized","info"),this.log("üì° Ready for demonstrations...","info")}clearNodes(){this.nodeGrid.innerHTML="",this.activeNodes.clear(),this.messageCount=0,this.currentStep=0,this.observer.clearHistory(),this.updateStats()}}document.addEventListener("DOMContentLoaded",()=>{new V});
